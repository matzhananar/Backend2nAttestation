[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Ubuntu Java 11.0.9.1)
[debug]       Load.loadUnit: plugins took 90.014614ms
[debug]       Load.loadUnit: defsScala took 0.325471ms
[debug] [Loading] Scanning directory /home/mars/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/mars/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.834569 ms
[debug]           Load.resolveProject(global-plugins) took 44.420748ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/mars/.sbt/1.0/plugins, plugins: List(<none>))) took 94.929178ms
[debug] [Loading] Done in /home/mars/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 115.917787ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.179272ms
[debug]     Load.loadUnit(file:/home/mars/.sbt/1.0/plugins/, ...) took 214.409265ms
[debug]   Load.apply: load took 363.457406ms
[debug]   Load.apply: resolveProjects took 5.130352ms
[debug]   Load.apply: finalTransforms took 57.120047ms
[debug]   Load.apply: config.delegates took 5.525192ms
[debug]   Load.apply: Def.make(settings)... took 339.076547ms
[debug]   Load.apply: structureIndex took 91.516208ms
[debug]   Load.apply: mkStreams took 1.171682ms
[info] loading global plugins from /home/mars/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2036.523583ms
[debug]           Load.loadUnit: plugins took 12.27863ms
[debug]           Load.loadUnit: defsScala took 0.002606ms
[debug] [Loading] Scanning directory /home/mars/IdeaProjects/SIS9/NumberGeneratorService/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/mars/IdeaProjects/SIS9/NumberGeneratorService/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.393161 ms
[debug]               Load.resolveProject(numbergeneratorservice-build) took 0.81812ms
[debug]             Load.loadTransitive: finalizeProject(Project(id numbergeneratorservice-build, base: /home/mars/IdeaProjects/SIS9/NumberGeneratorService/project, plugins: List(<none>))) took 2.640253ms
[debug] [Loading] Done in /home/mars/IdeaProjects/SIS9/NumberGeneratorService/project, returning: (numbergeneratorservice-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3.817545ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.007479ms
[debug]         Load.loadUnit(file:/home/mars/IdeaProjects/SIS9/NumberGeneratorService/project/, ...) took 16.477704ms
[debug]       Load.apply: load took 17.262982ms
[debug]       Load.apply: resolveProjects took 0.07385ms
[debug]       Load.apply: finalTransforms took 8.278121ms
[debug]       Load.apply: config.delegates took 0.312228ms
[debug]       Load.apply: Def.make(settings)... took 79.599918ms
[debug]       Load.apply: structureIndex took 31.646371ms
[debug]       Load.apply: mkStreams took 0.002386ms
[info] loading project definition from /home/mars/IdeaProjects/SIS9/NumberGeneratorService/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 262.737096ms
[debug]     Load.loadUnit: defsScala took 0.003373ms
[debug] [Loading] Scanning directory /home/mars/IdeaProjects/SIS9/NumberGeneratorService
[debug]       Load.loadUnit: mkEval took 4.378163ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/mars/IdeaProjects/SIS9/NumberGeneratorService, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.881129 ms
[info] loading settings for project numbergeneratorservice from build.sbt ...
[debug]         Load.resolveProject(numbergeneratorservice) took 2.3906ms
[debug]       Load.loadTransitive: finalizeProject(Project(id numbergeneratorservice, base: /home/mars/IdeaProjects/SIS9/NumberGeneratorService, plugins: List(<none>))) took 4.951858ms
[debug] [Loading] Done in /home/mars/IdeaProjects/SIS9/NumberGeneratorService, returning: (numbergeneratorservice)
[debug]     Load.loadUnit: loadedProjectsRaw took 94.609142ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.067387ms
[debug]   Load.loadUnit(file:/home/mars/IdeaProjects/SIS9/NumberGeneratorService/, ...) took 361.06581ms
[debug] Load.apply: load took 362.083505ms
[debug] Load.apply: resolveProjects took 0.139229ms
[debug] Load.apply: finalTransforms took 8.609218ms
[debug] Load.apply: config.delegates took 0.349224ms
[debug] Load.apply: Def.make(settings)... took 87.133894ms
[debug] Load.apply: structureIndex took 18.012263ms
[debug] Load.apply: mkStreams took 0.002418ms
[info] set current project to NumberGeneratorService (in build file:/home/mars/IdeaProjects/SIS9/NumberGeneratorService/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
